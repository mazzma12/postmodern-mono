name: pr
on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  # Detect which packages need testing based on changed files
  changes:
    runs-on: ubuntu-latest
    outputs:
      greeter: ${{ steps.changes.outputs.greeter }}
      server: ${{ steps.changes.outputs.server }}
      mycli: ${{ steps.changes.outputs.mycli }}
      global: ${{ steps.changes.outputs.global }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            greeter:
              - 'libs/greeter/**'
            server:
              - 'apps/server/**'
              - 'libs/greeter/**'  # server depends on greeter
            mycli:
              - 'apps/mycli/**'
            global:
              - 'pyproject.toml'
              - 'uv.lock'
              - '.github/workflows/**'

  test-greeter:
    needs: changes
    if: ${{ needs.changes.outputs.greeter == 'true' || needs.changes.outputs.global == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: libs/greeter

    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.14"
      - run: uv sync --all-extras --locked --package=postmodern-greeter
      - run: uv run poe ci:fmt             # check formatting is correct
      - run: uv run poe ci:lint            # and linting
      - run: uv run poe check              # typecheck too
      - run: uv run poe test               # then run your tests!

  test-server:
    needs: changes
    if: ${{ needs.changes.outputs.server == 'true' || needs.changes.outputs.global == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/server

    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.14"
      - run: uv sync --all-extras --locked --package=postmodern-server
      - run: uv run poe ci:fmt             # check formatting is correct
      - run: uv run poe ci:lint            # and linting
      - run: uv run poe check              # typecheck too
      - run: uv run poe test               # then run your tests!

  test-mycli:
    needs: changes
    if: ${{ needs.changes.outputs.mycli == 'true' || needs.changes.outputs.global == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/mycli

    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.14"
      - run: uv sync --all-extras --locked --package=postmodern-mycli
      - run: uv run poe ci:fmt             # check formatting is correct
      - run: uv run poe ci:lint            # and linting
      - run: uv run poe check              # typecheck too
      - run: uv run poe test               # then run your tests!
